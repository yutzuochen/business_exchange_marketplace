name: 🚀 Simple CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: businessexchange-468413
  REGION: us-central1
  SERVICE_NAME: trade-company
  IMAGE_NAME: gcr.io/businessexchange-468413/trade-company

jobs:
  # 🐳 構建和推送 Docker 映像
  build-and-push:
    name: 🐳 Build & Push
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: 🔐 Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: 🐳 Configure Docker
        run: gcloud auth configure-docker
          
      - name: 🐳 Build and push
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker build -t ${{ env.IMAGE_NAME }}:latest .
          docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.IMAGE_NAME }}:latest

  # 🚀 部署到 Cloud Run
  deploy:
    name: 🚀 Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔐 Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: 🚀 Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --project ${{ env.PROJECT_ID }} \
            --allow-unauthenticated \
            --memory 1Gi \
            --cpu 1 \
            --max-instances 10 \
            --set-env-vars "APP_ENV=production,APP_NAME=BusinessExchange,DB_HOST=127.0.0.1,DB_PORT=3306,DB_USER=app,DB_PASSWORD=app_password,DB_NAME=business_exchange,CLOUDSQL_CONNECTION_NAME=businessexchange-468413:us-central1-c:trade-sql" \
            --add-cloudsql-instances ${{ env.PROJECT_ID }}:${{ env.REGION }}-c:trade-sql
            
      - name: 🔍 Health check
        run: |
          sleep 30
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ env.REGION }} --project=${{ env.PROJECT_ID }} --format="value(status.url)")
          echo "Service URL: $SERVICE_URL"
          curl -f "$SERVICE_URL/health" || exit 1
